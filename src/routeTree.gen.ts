/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as CarsProductDetailImport } from './routes/cars/productDetail'
import { Route as CarsLuxuryCarsImport } from './routes/cars/luxuryCars'
import { Route as CarsElectricalCarsImport } from './routes/cars/electricalCars'
import { Route as CarsClassicCarsImport } from './routes/cars/classicCars'

// Create/Update Routes

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CarsProductDetailRoute = CarsProductDetailImport.update({
  id: '/cars/productDetail',
  path: '/cars/productDetail',
  getParentRoute: () => rootRoute,
} as any)

const CarsLuxuryCarsRoute = CarsLuxuryCarsImport.update({
  id: '/cars/luxuryCars',
  path: '/cars/luxuryCars',
  getParentRoute: () => rootRoute,
} as any)

const CarsElectricalCarsRoute = CarsElectricalCarsImport.update({
  id: '/cars/electricalCars',
  path: '/cars/electricalCars',
  getParentRoute: () => rootRoute,
} as any)

const CarsClassicCarsRoute = CarsClassicCarsImport.update({
  id: '/cars/classicCars',
  path: '/cars/classicCars',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/cars/classicCars': {
      id: '/cars/classicCars'
      path: '/cars/classicCars'
      fullPath: '/cars/classicCars'
      preLoaderRoute: typeof CarsClassicCarsImport
      parentRoute: typeof rootRoute
    }
    '/cars/electricalCars': {
      id: '/cars/electricalCars'
      path: '/cars/electricalCars'
      fullPath: '/cars/electricalCars'
      preLoaderRoute: typeof CarsElectricalCarsImport
      parentRoute: typeof rootRoute
    }
    '/cars/luxuryCars': {
      id: '/cars/luxuryCars'
      path: '/cars/luxuryCars'
      fullPath: '/cars/luxuryCars'
      preLoaderRoute: typeof CarsLuxuryCarsImport
      parentRoute: typeof rootRoute
    }
    '/cars/productDetail': {
      id: '/cars/productDetail'
      path: '/cars/productDetail'
      fullPath: '/cars/productDetail'
      preLoaderRoute: typeof CarsProductDetailImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/cars/classicCars': typeof CarsClassicCarsRoute
  '/cars/electricalCars': typeof CarsElectricalCarsRoute
  '/cars/luxuryCars': typeof CarsLuxuryCarsRoute
  '/cars/productDetail': typeof CarsProductDetailRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/cars/classicCars': typeof CarsClassicCarsRoute
  '/cars/electricalCars': typeof CarsElectricalCarsRoute
  '/cars/luxuryCars': typeof CarsLuxuryCarsRoute
  '/cars/productDetail': typeof CarsProductDetailRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/cars/classicCars': typeof CarsClassicCarsRoute
  '/cars/electricalCars': typeof CarsElectricalCarsRoute
  '/cars/luxuryCars': typeof CarsLuxuryCarsRoute
  '/cars/productDetail': typeof CarsProductDetailRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/cars/classicCars'
    | '/cars/electricalCars'
    | '/cars/luxuryCars'
    | '/cars/productDetail'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/cars/classicCars'
    | '/cars/electricalCars'
    | '/cars/luxuryCars'
    | '/cars/productDetail'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/cars/classicCars'
    | '/cars/electricalCars'
    | '/cars/luxuryCars'
    | '/cars/productDetail'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  CarsClassicCarsRoute: typeof CarsClassicCarsRoute
  CarsElectricalCarsRoute: typeof CarsElectricalCarsRoute
  CarsLuxuryCarsRoute: typeof CarsLuxuryCarsRoute
  CarsProductDetailRoute: typeof CarsProductDetailRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  CarsClassicCarsRoute: CarsClassicCarsRoute,
  CarsElectricalCarsRoute: CarsElectricalCarsRoute,
  CarsLuxuryCarsRoute: CarsLuxuryCarsRoute,
  CarsProductDetailRoute: CarsProductDetailRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/contact",
        "/cars/classicCars",
        "/cars/electricalCars",
        "/cars/luxuryCars",
        "/cars/productDetail"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/cars/classicCars": {
      "filePath": "cars/classicCars.tsx"
    },
    "/cars/electricalCars": {
      "filePath": "cars/electricalCars.tsx"
    },
    "/cars/luxuryCars": {
      "filePath": "cars/luxuryCars.tsx"
    },
    "/cars/productDetail": {
      "filePath": "cars/productDetail.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
